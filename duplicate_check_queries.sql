-- Duplicate Detection Queries for Snowflake
-- These queries are generated by the duplicate check feature

-- 1. Fast duplicate count query
-- Gets aggregate statistics about duplicates
WITH duplicates AS (
    SELECT 
        recordDate, assetId, fundId,
        COUNT(*) as occurrence_count
    FROM TEST_CUSTOM_FACTLENDINGBENCHMARK
    WHERE recordDate BETWEEN '20240101' AND '20240131'
    GROUP BY recordDate, assetId, fundId
    HAVING COUNT(*) > 1
)
SELECT 
    COUNT(*) as duplicate_key_combinations,
    SUM(occurrence_count) as total_duplicate_rows,
    SUM(occurrence_count - 1) as excess_rows,
    MAX(occurrence_count) as max_duplicates_per_key,
    AVG(occurrence_count) as avg_duplicates_per_key
FROM duplicates;

-- 2. Sample duplicate records query
-- Gets sample duplicate records with details
WITH ranked_records AS (
    SELECT 
        *,
        ROW_NUMBER() OVER (
            PARTITION BY recordDate, assetId, fundId 
            ORDER BY recordDate
        ) as duplicate_rank,
        COUNT(*) OVER (
            PARTITION BY recordDate, assetId, fundId
        ) as duplicate_count
    FROM TEST_CUSTOM_FACTLENDINGBENCHMARK
    WHERE recordDate BETWEEN '20240101' AND '20240131'
),
duplicate_samples AS (
    SELECT *
    FROM ranked_records
    WHERE duplicate_count > 1
    ORDER BY duplicate_count DESC, recordDate, assetId, fundId, duplicate_rank
    LIMIT 10
)
SELECT 
    recordDate, assetId, fundId,
    duplicate_count,
    duplicate_rank,
    recordDate as date_info
FROM duplicate_samples;

-- 3. Duplicate distribution query
-- Shows how many keys have 2, 3, 4+ duplicates
WITH duplicate_counts AS (
    SELECT 
        COUNT(*) as occurrence_count
    FROM TEST_CUSTOM_FACTLENDINGBENCHMARK
    WHERE recordDate BETWEEN '20240101' AND '20240131'
    GROUP BY recordDate, assetId, fundId
    HAVING COUNT(*) > 1
)
SELECT 
    occurrence_count as duplicates_per_key,
    COUNT(*) as key_combinations
FROM duplicate_counts
GROUP BY occurrence_count
ORDER BY occurrence_count
LIMIT 20;

-- 4. Find all duplicate records for a specific key combination
-- Useful for investigating specific duplicates
SELECT *
FROM TEST_CUSTOM_FACTLENDINGBENCHMARK
WHERE recordDate = '20240115'
  AND assetId = 'ASSET123'
  AND fundId = 'FUND456'
ORDER BY xUpdateDate DESC;

-- 5. Remove duplicates (keeping most recent by xUpdateDate)
-- WARNING: This modifies data - use with caution!
DELETE FROM TEST_CUSTOM_FACTLENDINGBENCHMARK
WHERE (recordDate, assetId, fundId, xUpdateDate) NOT IN (
    SELECT recordDate, assetId, fundId, MAX(xUpdateDate)
    FROM TEST_CUSTOM_FACTLENDINGBENCHMARK
    WHERE recordDate BETWEEN '20240101' AND '20240131'
    GROUP BY recordDate, assetId, fundId
)
AND recordDate BETWEEN '20240101' AND '20240131';